#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <signal.h>

void procStatus() {
	printf("Nazwa procesu PID: %d\tID procesu nad PPID: %d\n", getpid(), getppid());
	fflush(NULL);
}

void singleChild() {
	pid_t pid = fork();
	if (pid == 0) {
		procStatus();
		exit(0);
	}
	else if (pid == -1) {
		printf("Blad funkcji fork\n");
		exit(1);
}
	else {
		wait(NULL);
	}
}

void proces1() {
	singleChild();
}

void proces5() {
	pid_t pid = fork();
	if (pid == 0) {
		procStatus();
		singleChild();

		pid_t pid2 = fork();
		if (pid2 == 0) {
			procStatus();
			singleChild();

			exit(0);
		}
		else {
			wait(NULL);
		}
		exit(0);
	}
	else {
		wait(NULL);
	}
}


void proces2() {
	pid_t pid = fork();
	if (pid == 0) {
		procStatus();
		
		for (int i = 0; i < 2; i++) {
			singleChild();

			if (i == 1) {
				pid_t pid2 = fork();
				singleChild();

				if (pid2 == 0) {
					procStatus();
					singleChild();
					exit(0);
				}
				else {
					wait(NULL);
				}
			}
			exit(0);
		}
		exit(0);
	}
	else {
		wait(NULL);
	}
}

void proces3() {
	singleChild();
}

void proces4() {
	pid_t pid = fork();
	if (pid == 0) {
		procStatus();
		
		for (int i = 0; i < 2; i++) {
			singleChild();
		}

		exit(0);
	}
	else {
		wait(NULL);
	}
}


int main() {
	
	procStatus();
	proces1();
	proces5();
	proces3();
	proces4();

	return 0;

}








